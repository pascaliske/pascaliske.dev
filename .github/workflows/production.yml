name: Deploy App
on:
  push:
    tags:
      - '*'

env:
  PROD_DOMAIN: pascaliske.dev

jobs:
  deploy:
    name: Production
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://${{ env.PROD_DOMAIN }}
    steps:
      # checkout
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # prepare
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
      - run: yarn install --frozen-lockfile

      # test
      - run: yarn run lint
      - uses: cypress-io/github-action@v2
        with:
          command: yarn run e2e --headless --record --key ${{ secrets.CYPRESS_RECORD_KEY }}
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore

      # build
      - run: yarn run build --base-href https://${{ env.PROD_DOMAIN }}
      - run: yarn run bundlewatch
        env:
          BUNDLEWATCH_GITHUB_TOKEN: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
          CI_REPO_SLUG: ${{ env.GITHUB_REPOSITORY }}
          CI_COMMIT_SHA: ${{ env.GITHUB_SHA }}
          CI_BRANCH: ${{ env.GITHUB_REF }}

      # deploy
      - uses: cloudflare/wrangler-action@1.3.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: production
        env:
          CF_ACCOUNT_ID: '${{ secrets.CF_ACCOUNT_ID }}'
          CF_ZONE_ID: '${{ secrets.CF_ZONE_ID }}'
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          projectId: pascaliske-dev
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PASCALISKE_DEV }}'
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          channelId: live

      # - run: yarn run lighthouse --output-path=./report.html https://${{ env.PROD_DOMAIN }}
      # - run: yarn run now report.html --token ${{ secrets.NOW_TOKEN }} --no-clipboard --public
      # - run: yarn run sentry-cli releases new "$TRAVIS_TAG"
      # - run: yarn run sentry-cli releases set-commits --auto "$TRAVIS_TAG"
      # - run: yarn run sentry-cli releases files "$TRAVIS_TAG" upload-sourcemaps ./dist --no-rewrite
      # - run: yarn run sentry-cli releases deploys "$TRAVIS_TAG" new -e production
      # - run: yarn run sentry-cli releases finalize "$TRAVIS_TAG"
