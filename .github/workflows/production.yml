name: Deploy Production
on:
  push:
    tags:
      - '*'

jobs:
  deploy:
    name: Production
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://pascaliske.dev
    steps:
      # checkout
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # prepare
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
      - run: yarn install --frozen-lockfile

      # test
      - run: yarn run lint
      - uses: cypress-io/github-action@v2
        with:
          command: yarn run e2e --headless --record --key ${{ secrets.CYPRESS_RECORD_KEY }}
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore

      # build
      - run: yarn run build
      - run: yarn run bundlewatch
        env:
          BUNDLEWATCH_GITHUB_TOKEN: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
          CI_REPO_SLUG: ${{ env.GITHUB_REPOSITORY }}
          CI_COMMIT_SHA: ${{ env.GITHUB_SHA }}
          CI_BRANCH: ${{ env.GITHUB_REF }}

      # deploy
      - uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          environment: production
        env:
          CF_ZONE_ID: '${{ secrets.CF_ZONE_ID }}'

      # clear cache
      - uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CF_ZONE_ID }}
          CLOUDFLARE_TOKEN: ${{ secrets.CF_API_TOKEN }}

      # generate release notes
      - name: Generate release notes
        id: changelog
        run: |
          npx standard-changelog -i /dev/null -o CHANGES.md

      # create github release
      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          bodyFile: CHANGES.md
          prerelease: ${{ steps.changelog.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog.outputs.status == 'unreleased' }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: README.md,LICENSE.md

      # - run: yarn run lighthouse --output-path=./report.html https://${{ env.PROD_DOMAIN }}
      # - run: yarn run now report.html --token ${{ secrets.NOW_TOKEN }} --no-clipboard --public
      # - run: yarn run sentry-cli releases new "$TRAVIS_TAG"
      # - run: yarn run sentry-cli releases set-commits --auto "$TRAVIS_TAG"
      # - run: yarn run sentry-cli releases files "$TRAVIS_TAG" upload-sourcemaps ./dist --no-rewrite
      # - run: yarn run sentry-cli releases deploys "$TRAVIS_TAG" new -e production
      # - run: yarn run sentry-cli releases finalize "$TRAVIS_TAG"
