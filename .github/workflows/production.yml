name: Deploy Production
on:
  push:
    tags:
      - '*'

jobs:
  deploy:
    name: Production
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://pascaliske.dev
    steps:
      # checkout
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # setup node
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      # install dependencies
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # build
      - name: Build application
        run: |
          yarn run build:app
          yarn run build:server
          yarn run prerender

      # deploy
      - uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          environment: production
        env:
          CF_ZONE_ID: '${{ secrets.CF_ZONE_ID }}'

      # clear cache
      - uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CF_ZONE_ID }}
          CLOUDFLARE_TOKEN: ${{ secrets.CF_API_TOKEN }}

      # generate release notes
      - name: Generate release notes
        id: changelog
        run: |
          npx standard-changelog -i /dev/null -o CHANGES.md

      # create github release
      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          bodyFile: CHANGES.md
          prerelease: ${{ steps.changelog.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog.outputs.status == 'unreleased' }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: README.md,LICENSE.md
